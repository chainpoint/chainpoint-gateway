swagger: '2.0'
info:
  version: '1.0.0'
  title: 'Chainpoint Node'
  description: 'Documentation for the Chainpoint Node API'
  termsOfService: 'http://chainpoint.org/terms/'
  contact:
    email: 'team@chainpoint.org'
  license:
    name: 'Apache 2.0'
    url: 'https://tldrlegal.com/license/apache-license-2.0-(apache-2.0)'
tags:
- name: 'hashes'
  description: 'Your hashes to be anchored'
- name: 'proofs'
  description: 'Your Chainpoint proofs created for each of your hashes'
- name: 'verify'
  description: 'Verification process for your proofs'
- name: 'calendar'
  description: 'Chainpoint calendar block data'
- name: 'config'
  description: 'Configuration information about the Node'
externalDocs:
  description: 'Find out more about Chainpoint'
  url: 'https://chainpoint.org'
host: 35.188.224.112
schemes:
 - http
paths:
  '/hashes':
    post:
      tags:
      - 'hashes'
      summary: 'Submit one or more hashes for anchoring'
      description: ''
      consumes:
      - 'application/json'
      produces:
      - 'application/json'
      parameters:
      - in: 'body'
        name: 'body'
        description: 'An array of hex string hashes to be anchored'
        required: true
        schema:
          $ref: '#/definitions/PostHashRequest'
      responses:
        '200':
          description: 'successful operation'
          schema:
            $ref: '#/definitions/PostHashResponse'
        '409':
          description: 'invalid argument in request'
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/proofs/{hash_id_node}':
    get:
      tags:
      - 'proofs'
      summary: 'Retrieves a proof by hash_id_node'
      description: ''
      produces:
      - 'application/vnd.chainpoint.ld+json'
      - 'application/vnd.chainpoint.json+base64'
      parameters:
        - name: 'hash_id_node'
          in: 'path'
          required: true
          description: 'The hash_id_node of the proof to retrieve'
          type: string
      responses:
        '200':
          description: 'successful operation'
          schema:
            type: array
            items:
              $ref: '#/definitions/GetProofsResponse'
        '409':
          description: 'invalid argument in request'
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/proofs/':
    get:
      tags:
      - 'proofs'
      summary: 'Retrieves one or more proofs by hashids supplied in header'
      description: ''
      produces:
      - 'application/vnd.chainpoint.ld+json'
      - 'application/vnd.chainpoint.json+base64'
      parameters:
        - name: 'hashids'
          in: 'header'
          required: true
          description: 'Comma separated hash_id_node list of the proofs to retrieve'
          type: string
      responses:
        '200':
          description: 'successful operation'
          schema:
            type: array
            items:
              $ref: '#/definitions/GetProofsResponse'
        '409':
          description: 'invalid argument in request'
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/verify':
    post:
      tags:
      - 'verify'
      summary: 'Submit one or more proofs for verification'
      description: ''
      consumes:
      - 'application/json'
      produces:
      - 'application/json'
      parameters:
      - in: 'body'
        name: 'body'
        description: 'Array of one or more proofs to be verified'
        required: true
        schema:
          $ref: '#/definitions/PostVerifyRequest'
      responses:
        '200':
          description: 'successful operation'
          schema:
            type: array
            items:
              $ref: '#/definitions/PostVerifyResponse'
        '409':
          description: 'invalid argument in request'
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/calendar/{height}':
    get:
      tags:
      - 'calendar'
      summary: 'Retrieves the calendar block at the given height'
      description: ''
      produces:
      - 'application/json'
      parameters:
        - name: 'height'
          in: 'path'
          required: true
          description: 'The height of the block to retrieve'
          type: integer
      responses:
        '200':
          description: 'successful operation'
          schema:
            $ref: '#/definitions/GetCalendarBlockResponse'
        '409':
          description: 'invalid argument in request'
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/calendar/{height}/hash':
    get:
      tags:
      - 'calendar'
      summary: 'Retrieves the calendar block hash at the given height'
      description: ''
      produces:
      - 'text/plain'
      parameters:
        - name: 'height'
          in: 'path'
          required: true
          description: 'The height of the block hash to retrieve'
          type: integer
      responses:
        '200':
          description: 'successful operation'
          schema:
            $ref: '#/definitions/GetCalendarBlockHashResponse'
        '409':
          description: 'invalid argument in request'
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/calendar/{height}/data':
    get:
      tags:
      - 'calendar'
      summary: 'Retrieves the calendar block data_val at the given height'
      description: ''
      produces:
      - 'text/plain'
      parameters:
        - name: 'height'
          in: 'path'
          required: true
          description: 'The height of the block data_val to retrieve'
          type: integer
      responses:
        '200':
          description: 'successful operation'
          schema:
            $ref: '#/definitions/GetCalendarBlockDataResponse'
        '409':
          description: 'invalid argument in request'
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/config':
    get:
      tags:
      - 'config'
      summary: 'Retrieves the configuration information for the Node'
      description: ''
      produces:
      - 'application/json'
      responses:
        '200':
          description: 'successful operation'
          schema:
            type: array
            items:
              $ref: '#/definitions/GetConfigResponse'
definitions:
  PostHashRequest:
    type: object
    properties:
      hashes:
        type: array
        items:
          type: string
          example: '1957db7fe23e4be1740ddeb941ddda7ae0a6b782e536a9e00b5aa82db1e84547'
          pattern: '^([a-fA-F0-9]{2}){20,64}$'
          minLength: 40
          maxLength: 128
  PostHashResponse:
    type: object
    properties:
      meta:
       type: object
       properties:
        submitted_at:
          type: string
          format: 'date-time'
          example: '2017-05-02T15:16:44Z'
        processing_hints:
          type: object
          properties:
            cal:
              type: string
              format: 'date-time'
              example: '2017-05-02T15:17:44Z'
            eth:
              type: string
              format: 'date-time'
              example: '2017-05-02T15:27:44Z'
            btc:
              type: string
              format: 'date-time'
              example: '2017-05-02T16:17:44Z'
      hashes:
       type: array
       items:
        type: object
        properties:
          hash_id_node:
            type: string
            example: '5a001650-2f4a-11e7-ad22-37b426116bc4'
          hash:
            type: string
            example: '11cd8a380e8d5fd3ac47c1f880390341d40b11485e8ae946d8fa3d466f23fe89'
  GetProofsResponse:
    type: object
    properties:
      hash_id_node:
        type: string
        example: '1957db7fe23e4be1740ddeb941ddda7ae0a6b782e536a9e00b5aa82db1e84547'
      proof:
        type: object
      anchors_complete:
        type: array
        items:
          type: string
          example: 'cal'
  ErrorResponse:
    type: object
    properties:
      code:
        type: string
      message:
        type: string
  PostVerifyRequest:
    type: object
    properties:
      proofs:
        type: array
        items:
          type: object
          example: {}
        minItems: 1
        maxItems: 1000
  PostVerifyResponse:
    type: object
    properties:
      proof_index:
        type: integer
        example: 0
      hash:
        type: string
        example: '112233ab12ab12ab12ab12ab12ab12ab12ab12ab12ab12ab11'
      hash_id_node:
        type: string
        example: '3bce9920-4ed7-11e7-a7d0-3d6269e334e8'
      hash_submitted_node_at:
        type: string
        format: 'date-time'
        example: '2017-06-11T18:53:18Z'
      hash_id_core:
        type: string
        example: '3bce9920-4ed7-11e7-a7d0-3d6269e334e8'
      hash_submitted_core_at:
        type: string
        format: 'date-time'
        example: '2017-06-11T18:53:18Z'
      anchors:
        type: array
        items:
          type: object
          properties:
            branch:
              type: string
              example: 'cal_anchor_branch'
            type:
              type: string
              example: 'cal'
            valid:
              type: 'boolean'
              example: true
            block_id:
              type: 'string'
              example: "2133282"
            block_value:
              type: 'string'
              example: "717c0c127eff7e65fc21ef8d72e42d994c6cab07245509bb3229957f7e67c6e3"
      status:
        type: string
        example: 'verified'
  GetCalendarBlockResponse:
    type: object
    properties:
      id:
        type: integer
        example: 729
      time:
        type: integer
        example: 1497225912859
      version:
        type: integer
        example: 1
      stackId:
        type: string
        example: 'chainpoint.calendar.a'
      type:
        type: string
        example: 'btc-c'
      dataId:
        type: string
        example: '470984'
      dataVal:
        type: string
        example: '1e8b7d0c4f94775191512575dcf808ca97a4079946b3df11cd16f3329e680878'
      prevHash:
        type: string
        example: '328b11598c2f02bfccc3459f52eb57dd3735136c2856d903f8c227d1a51e084f'
      hash:
        type: string
        example: '29f72bc7fae6e504d1080ac206b149d6cbf0ca21b4bbd0ac5e9e44213a52165a'
      sig:
        type: string
        example: 'lfdvO6fOeRo+wAj9n3Ca9GHMsRsosawRdZ6o2fkvdgIjMkaAa83RkTX/iveK5ogTs7FdNrxnnjmvC9bR5ayLACn3K8f65uUE0QgKwgaxSdbL2MohtLvQrF6eRCE6UhZa'
  GetCalendarBlockHashResponse:
    type: string
    example: 'f18bf0968b224f73528d99cc83ca9e79d467f34875e85f36e2c1f074ff2dc657'
  GetCalendarBlockDataResponse:
    type: string
    example: 'b387600e023670fa8c7cac9689d8d8aa212c681c0b0d9d5a86c53acea0f25c48'
  GetConfigResponse:
    type: object
    properties:
      version:
        type: string
        example: '1.0.0'
      proof_expire_minutes:
        type: integer
        example: 1440
      get_proofs_max_rest:
        type: integer
        example: 250
      post_hashes_max:
        type: integer
        example: 1000
      post_verify_proofs_max:
        type: integer
        example: 1000
      time:
        type: string
        format: date-time
        example: '2017-07-14T18:07:31Z'
      calendar:
        type: object
        properties:
          height:
            type: integer
            example: 43625
          audit_response:
            type: string
            example: 1504638363018:6ac306525d11767f3458bd63c7a581ea7248790e02cdd9a6b94dd77d75bda054
